# Generated by Django 5.1.7 on 2025-03-09 10:57

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('content', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='RoomMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('member', 'Member'), ('moderator', 'Moderator'), ('admin', 'Admin')], default='member', max_length=10)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudyMilestone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('milestone_type', models.CharField(choices=[('streak', 'Study Streak'), ('sessions', 'Study Sessions'), ('hours', 'Study Hours'), ('collaboration', 'Group Study'), ('contribution', 'Community Contribution')], max_length=20)),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('value', models.PositiveIntegerField()),
                ('achieved_at', models.DateTimeField(auto_now_add=True)),
                ('badge_image', models.ImageField(blank=True, null=True, upload_to='badges/')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='study_milestones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-achieved_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('room_type', models.CharField(choices=[('general', 'General Study'), ('course', 'Course Specific'), ('project', 'Project Work'), ('interview', 'Interview Prep')], max_length=20)),
                ('max_members', models.PositiveIntegerField(default=10)),
                ('is_private', models.BooleanField(default=False)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('course', models.ForeignKey(blank=True, help_text='For course-specific rooms', null=True, on_delete=django.db.models.deletion.SET_NULL, to='content.resourcecategory')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_rooms', to=settings.AUTH_USER_MODEL)),
                ('members', models.ManyToManyField(related_name='joined_rooms', through='content.RoomMembership', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.AddField(
            model_name='roommembership',
            name='room',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='content.studyroom'),
        ),
        migrations.CreateModel(
            name='RoomChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_system_message', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='content.studyroom')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('goals', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('participants', models.ManyToManyField(related_name='participated_sessions', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='content.studyroom')),
                ('started_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='started_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='StudyStreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_streak', models.PositiveIntegerField(default=0)),
                ('longest_streak', models.PositiveIntegerField(default=0)),
                ('last_study_date', models.DateField(blank=True, null=True)),
                ('total_study_sessions', models.PositiveIntegerField(default=0)),
                ('total_study_time', models.DurationField(default=datetime.timedelta)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='study_streak', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='roommembership',
            unique_together={('user', 'room')},
        ),
    ]
